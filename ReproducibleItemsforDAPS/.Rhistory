p <- cbind(p,IQR_exp)
p$Rel_Val <- p$Estimate/iqr
sno2df <- daps0[,c(1,3,5:7,19:26,30)]
p1 <- ldply(sno2df[c(6:13)], function(x) {
mod <- lm(x ~ log_stat_NO2+ age + gender + race_afam + season, data=sno2df)
b <- as.data.frame(summary(mod)$coefficients[, c(1,2)]) %>% .[2,] #extract the exposure coefficient and standard error
resid_var <- summary(mod)$sigma**2 #extract residual standard error and square it to get residual variance
model_name <- as.character(summary(mod)$call)[2] #extract the model call
e <- as.data.frame(cbind(b,resid_var))%>% cbind(., model_name) #bind all of the components together into a single dataframe
} )
iqr2 <- IQR(sno2df$log_stat_NO2, na.rm=TRUE)
IQR_exp <- rep(iqr2,(nrow(p1)))
p1 <- cbind(p1,IQR_exp)
p1$Rel_Val <- p1$Estimate/iqr2
pheno2df <- daps0[,c(1,3,5:7,19:26,34)]
p2 <- ldply(pheno2df[c(6:13)], function(x) {
mod <- lm(x ~ log_CDPHE_NO2_mean + age + gender + race_afam + season, data=pheno2df)
b <- as.data.frame(summary(mod)$coefficients[, c(1,2)]) %>% .[2,] #extract the exposure coefficient and standard error
resid_var <- summary(mod)$sigma**2 #extract residual standard error and square it to get residual variance
model_name <- as.character(summary(mod)$call)[2] #extract the model call
e <- as.data.frame(cbind(b,resid_var))%>% cbind(., model_name) #bind all of the components together into a single dataframe
} )
iqr3 <- IQR(pheno2df$log_CDPHE_NO2_mean, na.rm=TRUE)
IQR_exp <- rep(iqr3,(nrow(p2)))
p2 <- cbind(p2,IQR_exp)
p2$Rel_Val <- p2$Estimate/iqr3
cbcno2 <- rbind(p, p1, p2)
empty2 <- data.frame(matrix(NA, nrow=nrow(cbcno2), ncol=3))
cbcno2 <- cbind(cbcno2, empty2)
cbcno2<- cbcno2[,c( 1,2,3,4,10,9,8,5,6,7)]
names(cbcno2)
nicadf <- daps0[,c(1,3,5:7,19:26,49)]
cbcnic <- ldply(nicadf[c(6:13)], function(x) {
mod <- lm(x ~ nicalert + age + gender + race_afam + season, data=nicadf)
b <- as.data.frame(summary(mod)$coefficients[, c(1,2)]) %>% .[2,] #extract the exposure coefficient and standard error
resid_var <- summary(mod)$sigma**2 #extract residual standard error and square it to get residual variance
model_name <- as.character(summary(mod)$call)[2] #extract the model call
e <- as.data.frame(cbind(b,resid_var))%>% cbind(., model_name) #bind all of the components together into a single dataframe
} )
iqr <- IQR(nicadf$nicalert, na.rm=TRUE)
IQR_exp <- rep(iqr,(nrow(cbcnic)))
cbcnic <- cbind(cbcnic,IQR_exp)
cbcnic$Rel_Val <- cbcnic$Estimate/iqr
empty2 <- data.frame(matrix(NA, nrow=nrow(cbcnic), ncol=3))
cbcnic <- cbind(cbcnic, empty2)
cbcnic<- cbcnic[,c( 1,2,3,4,10,9,8,5,6,7)]
names(cbcnic)
vpm10df <- daps[, c(1,3,5:7, 8:18,46,48,27)]
spm10df <- daps[, c(1,3,5:7, 8:18, 46,48,28)]
phepm10df <- daps[, c(1,3,5:7, 8:18,46,48, 32)]
vno2df <- daps[, c(1,3,5:7, 8:18,46,48, 29)]
sno2df <- daps[, c(1,3,5:7, 8:18,46,48, 30)]
pheno2df <- daps[, c(1,3,5:7, 8:18,46,48, 34)]
nicdf <- daps[, c(1,3,5:7, 8:18,46,48, 49)]
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
p <- ldply(vpm10df[c(6:7,17,18)], function(x) {
mod <- lmer(x ~ log_vest_pm10 + age + gender + race_afam + season+ (1|id), data=vpm10df)  #mixed effects model with random intercept by id
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr <- IQR(vpm10df$log_vest_pm10, na.rm=TRUE)
IQR_exp <- rep(iqr,(nrow(p)))
p <- cbind(p,IQR_exp)
p$Rel_Val <- p$Estimate/iqr
q <- ldply(vpm10df[c(8:16)], function(x) {
mod <-  lmer(x ~ log_vest_pm10 +season+ (1|id), data=vpm10df)
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr2 <- IQR(vpm10df$log_vest_pm10, na.rm=TRUE)
IQR_exp <- rep(iqr2,(nrow(q)))
q <- cbind(q,IQR_exp)
q$Rel_Val <- q$Estimate/iqr2
p1 <- ldply(spm10df[c(6:7,17,18)], function(x) {
mod <- lmer(x ~ log_msp_pm10 + age + gender + race_afam + season+ (1|id), data=spm10df)
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr3 <- IQR(spm10df$log_msp_pm10, na.rm=TRUE)
IQR_exp <- rep(iqr3,(nrow(p1)))
p1 <- cbind(p1,IQR_exp)
p1$Rel_Val <- p1$Estimate/iqr3
q1 <- ldply(spm10df[c(8:16)], function(x) {
mod <- lmer(x ~ log_msp_pm10 +season+ (1|id), data=spm10df)
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr4 <- IQR(spm10df$log_msp_pm10, na.rm=TRUE)
IQR_exp <- rep(iqr4,(nrow(q1)))
q1 <- cbind(q1,IQR_exp)
q1$Rel_Val <- q1$Estimate/iqr4
p2 <- ldply(phepm10df[c(6:7,17,18)], function(x) {
mod <- lmer(x ~ CDPHE_PM10_mean + age + gender + race_afam + season+ (1|id), data=phepm10df)
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr5 <- IQR(phepm10df$CDPHE_PM10_mean, na.rm=TRUE)
IQR_exp <- rep(iqr5,(nrow(p2)))
p2 <- cbind(p2,IQR_exp)
p2$Rel_Val <- p2$Estimate/iqr5
q2 <- ldply(phepm10df[c(8:16)], function(x) {
mod <-  lmer(x ~ CDPHE_PM10_mean +season+ (1|id), data=phepm10df)
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr5 <- IQR(phepm10df$CDPHE_PM10_mean, na.rm=TRUE)
IQR_exp <- rep(iqr5,(nrow(q2)))
q2 <- cbind(q2,IQR_exp)
q2$Rel_Val <- q2$Estimate/iqr5
pm10rm <- rbind(p,q,p1,q1,p2,q2)
names(pm10rm)
p <- ldply(vno2df[c(6:7,17,18)], function(x) {
mod <- lmer(x ~ log_vest_NO2 + age + gender + race_afam + season+ (1|id), data=vno2df)
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr <- IQR(vno2df$log_vest_NO2, na.rm=TRUE)
IQR_exp <- rep(iqr,(nrow(p)))
p <- cbind(p,IQR_exp)
p$Rel_Val <- p$Estimate/iqr
q <- ldply(vno2df[c(8:16)], function(x) {
mod <- lmer(x ~ log_vest_NO2 +season+ (1|id), data=vno2df)
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr2 <- IQR(vno2df$log_vest_NO2, na.rm=TRUE)
IQR_exp <- rep(iqr2,(nrow(q)))
q <- cbind(q,IQR_exp)
q$Rel_Val <- q$Estimate/iqr
p1 <- ldply(sno2df[c(6:7,17,18)], function(x) {
mod <-lmer(x ~ log_stat_NO2 + age + gender + race_afam + season+ (1|id), data=sno2df)
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr3 <- IQR(sno2df$log_stat_NO2, na.rm=TRUE)
IQR_exp <- rep(iqr3,(nrow(p1)))
p1 <- cbind(p1,IQR_exp)
p1$Rel_Val <- p1$Estimate/iqr
q1 <- ldply(sno2df[c(8:16)], function(x) {
mod <- lmer(x ~ log_stat_NO2 +season+ (1|id), data=sno2df)
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr4 <- IQR(vno2df$log_stat_NO2, na.rm=TRUE)
IQR_exp <- rep(iqr4,(nrow(q1)))
q1 <- cbind(q1,IQR_exp)
q1$Rel_Val <- q1$Estimate/iqr
p2 <- ldply(pheno2df[c(6:7,17,18)], function(x) {
mod <- lmer(x ~ log_CDPHE_NO2_mean + age + gender + race_afam + season+ (1|id), data=pheno2df)
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr5 <- IQR(pheno2df$log_CDPHE_NO2_mean , na.rm=TRUE)
IQR_exp <- rep(iqr5,(nrow(p2)))
p2 <- cbind(p2,IQR_exp)
p2$Rel_Val <- p2$Estimate/iqr
q2 <- ldply(pheno2df[c(8:16)], function(x) {
mod <-  lmer(x ~ log_CDPHE_NO2_mean +season+ (1|id), data=pheno2df)
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr6 <- IQR(pheno2df$log_CDPHE_NO2_mean , na.rm=TRUE)
IQR_exp <- rep(iqr6,(nrow(q2)))
q2 <- cbind(q2,IQR_exp)
q2$Rel_Val <- q2$Estimate/iqr
no2rm <- rbind(p,q,p1,q1,p2,q2)
p <- ldply(nicdf[c(6:7,17,18)], function(x) {
mod <-  lmer(x ~ nicalert + age + gender + race_afam + season+ (1|id), data=nicdf)
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr <- IQR(nicdf$nicalert , na.rm=TRUE)
IQR_exp <- rep(iqr,(nrow(p)))
p <- cbind(p,IQR_exp)
p$Rel_Val <- p$Estimate/iqr
q <- ldply(nicdf[c(8:16)], function(x) {
mod <- lmer(x ~ nicalert +season+ (1|id), data=nicdf)
empty <- data.frame(matrix(NA, nrow=1, ncol=2))
b2 <- as.data.frame(summary(mod)$coefficients[,c(1,2)]) %>% .[2,]   #extract only the exposure coefficient and its standard error
names(empty) <- names(b2)
b <- rbind(b2,empty)
resid_var <- c((summary(mod)$sigma**2),NA) # create a vector of length = 2 with the residual variance included
e <- as.data.frame(cbind(b,resid_var)) #combine that with the coefficient/se
f <- as.data.frame(summary(mod)$varcor)%>% .[-c(2,3)]
d2 <- rep(NA, nrow(e)-1)
model_name <- c((as.character(summary(mod)$call)[2]), d2)
g <-  cbind(e,f) %>% cbind(., model_name)
} )
iqr2 <- IQR(nicdf$nicalert , na.rm=TRUE)
IQR_exp <- rep(iqr2,(nrow(q)))
q <- cbind(q,IQR_exp)
q$Rel_Val <- q$Estimate/iqr
nicrm <- rbind(p,q)
empty <- data.frame(matrix(NA, nrow=1, ncol=8))
names(endo)
names(endo)<- c("OUTCOME","Exposure.Coefficient","Std.Error Coef.Exp", "Residual Variance of Model","Components of Variance Correlation","VAR COR","SD COR","Model Structure","IQR of Exposure","Coef IQR")
write.table(endo, file = "DAPS_OUTPUT1.csv", append = TRUE, quote = FALSE, sep = ",",
eol = "\n\n", na =" ", dec = ".", row.names = FALSE,
col.names = TRUE)
write.table(gluc, file = "DAPS_OUTPUT1.csv", append = TRUE, quote = FALSE, sep = ",",
eol = "\n\n", na =" ", dec = ".", row.names = FALSE,
col.names = FALSE)
write.table(ozone, file = "DAPS_OUTPUT1.csv", append = TRUE, quote = FALSE, sep = ",",
eol = "\n\n", na =" ", dec = ".", row.names = FALSE,
col.names = FALSE)
write.table(cbcpm10, file = "DAPS_OUTPUT1.csv", append = TRUE, quote = FALSE, sep = ",",
eol = "\n\n", na =" ", dec = ".", row.names = FALSE,
col.names = FALSE)
write.table(cbcno2, file = "DAPS_OUTPUT1.csv", append = TRUE, quote = FALSE, sep = ",",
eol = "\n\n", na =" ", dec = ".", row.names = FALSE,
col.names = FALSE)
write.table(cbcnic, file = "DAPS_OUTPUT1.csv", append = TRUE, quote = FALSE, sep = ",",
eol = "\n\n", na =" ", dec = ".", row.names = FALSE,
col.names = FALSE)
write.table(pm10rm, file = "DAPS_OUTPUT1.csv", append = TRUE, quote = FALSE, sep = ",",
eol = "\n\n", na =" ", dec = ".", row.names = FALSE,
col.names = FALSE)
write.table(no2rm, file = "DAPS_OUTPUT1.csv", append = TRUE, quote = FALSE, sep = ",",
eol = "\n\n", na =" ", dec = ".", row.names = FALSE,
col.names = FALSE)
write.table(nicrm, file = "DAPS_OUTPUT1.csv", append = TRUE, quote = FALSE, sep = ",",
eol = "\n\n", na =" ", dec = ".", row.names = FALSE,
col.names = FALSE)
write.table(empty, file = "DAPS_OUTPUT1.csv", append = TRUE, quote = FALSE, sep = ",",
eol = "\n", na = " ", dec = ".", row.names = FALSE,
col.names = FALSE)
output <- read.csv("~/Desktop/ReproducibleItemsforDAPS/DAPS_OUTPUT1.csv", header=TRUE)
names(output)#what are the names of the columns currently?
#create an indicator for any empty rows so that I can delete them
output$ind <-ifelse(is.na(output$Exposure.Coefficient)&is.na(output$VAR.COR),1,0)
#remove the empty rows - there's only 1
output3 <- subset(output, ind == 0) #remove blank lines
#output3 is now workable
#now I want to add in a vector describing the exposure only - not the full model structure
#all of the possible model structures
mod.names <- levels(output3$Model.Structure) #what are the model structures
#split the string of the model names to get rid of the x~
mod.names2 <- sapply(strsplit(mod.names, "[~]"), '[',2) #get rid of the the x and the ~
#for each item in mod.names2, separate the item by the location of the + and then only keep the first item of the stored list
mod.names3 <-lapply(mod.names3 <- strsplit(mod.names2,"+", 2), function(x) { x[1]}) # pull apart everything in between the + and then keep only the first item on the list which is always the exposure value anyway
#trim the white spaces around the exposure names and then unlist them to turn them back into a vector
mod.names4 <- unlist(lapply(mod.names3 <- str_trim(mod.names3), function(x) {x[1]})) #do that again but make it back into a vector and strip the white space
mod.names4 <- mod.names4[c(2:30)] #get rid of the blank one
mod.names5 <- unique(mod.names4)#pull only the unique exposure variable names
#output3$cheese <- output3$Model.Structure #for testing primarily
#if the output3$Model.Structure contains a string matching to a string in mod.names5, then create a new variable with the string in mod.name 5 as the value. Store in an empty dataframe
a <-  data.frame(matrix(NA, nrow=nrow(output3), ncol=11)) #create an empty data frame the same number of rows as output3
for (i in 1:11){
a[i] <- as.data.frame(str_match(output3$Model.Structure, mod.names5[i])) #for each of the 11 unique exposures, test if they are contained in the string. if they are, then create a new variable that is filled with the appropriate exposure name.
}
#get rid of the NA's but merge the 11 columns into a single one.
a$Exposure <- apply(a[c(1:11)], 1, function(x) toString(na.omit(x)))
#bind the single column to the original dataframe
output3 <- cbind(output3, a$Exposure)
library(reshape)
#change the names to be pretty
names(output3) <- c("OUTCOME","Exposure.Coefficient","Std..Error.Coef..Exp", "Residual.Variance.of.Model","Components.of.Variance.Correlation","VAR.COR","SD.COR","Model.Structure","IQR.of.Exposure","Coef.IQR", "ind","Exposure")
names(output3)
#get rid of the unnecessary indicator variable
OUTPUT1 <- output3[,-11]
OUTPUT1$count <- ifelse(OUTPUT1$Components.of.Variance.Correlation== "Residual", 1, 0) #the residual variance is already in there, flag the rows that only have this
OUTPUT2 <- subset(OUTPUT1,OUTPUT1$count !=1) #get rid of those unnecessary rows
OUTPUT2$Residual.SD.Model <- sqrt(OUTPUT2$Residual.Variance.of.Model) #get the standard error in case they want that
names(OUTPUT2) #check the names
OUTPUT2 <- OUTPUT2[,-12] #drop the indicator variable
#it would be great to replace the x in each of the model structure names with the actual outcome name
for (i in 1:nrow(OUTPUT2)){
OUTPUT2$Model.Structure2[i] <- str_replace(OUTPUT2$Model.Structure[i], "x", as.character(OUTPUT2$OUTCOME[i]))
}
names(OUTPUT2)
names(OUTPUT2) <- c("Outcome","ExposureCoefficient","StdErrorCoefExp","ResidModelVariance","RandomEffectLabel","RandEffectVar", "RandEffectSD","ModelStructure","IQRExposure","Coef_IQR","Exposure","ResidSDModel","ModelStructure2")
check1 <-OUTPUT2[,c(1,11,13,2,3,4,5,6,9,10,8,7,12)]
names(check1)
OUTPUT3 <- check1[,c( 1:10)]
names(OUTPUT3) <- c("Outcome","Exposure","ModelStructure2","ExposureCoefficient","StdErrorCoefExp","ResidModelVariance","RandomEffectLabel","RandEffectVar","IQRExposure","Coef_IQR")
#print the output again because we want it to be easy to manipulate into smaller and more easily interpretable tables.
write.table(OUTPUT3, file = "DAPS_OUTPUT2.csv", append = TRUE, quote = FALSE, sep = ",",
eol = "\n\n", na =" ", dec = ".", row.names = FALSE,
col.names = TRUE)
names(output$OUTCOME)
levels(output$OUTCOME)
levels(output$OUTCOME)
# Rename by name: change "beta" to "two"
levels(output$OUTCOME)[levels(output$OUTCOME)=="CACT_ACT_cont"] <- "CACT-ACT"
levels(output$OUTCOME)[levels(output$OUTCOME)=="CASI_Total_wFxn"] <- "CASI Score"
levels(output$OUTCOME)[levels(output$OUTCOME)=="cbc_abs_eos"] <- "Absolute Eosinophils"
levels(output$OUTCOME)[levels(output$OUTCOME)=="cbc_abs_neut"] <- "Absolute Neutrophils"
levels(output$OUTCOME)[levels(output$OUTCOME)=="cbc_percent_eos"] <- "% Eosinophils"
levels(output$OUTCOME)[levels(output$OUTCOME)=="cbc_percent_neut"] <- "% Neutrophils"
levels(output$OUTCOME)[levels(output$OUTCOME)=="FEF2575_pp_GLI"] <- "FEF-2575 % pred"
levels(output$OUTCOME)[levels(output$OUTCOME)=="FEF2575_Zscore_GLI"] <- "FEF-2575 Z-score"
levels(output$OUTCOME)[levels(output$OUTCOME)=="FeNO_avg"] <- "Avg. FeNO"
levels(output$OUTCOME)[levels(output$OUTCOME)=="FEV1_FVC"] <- "FEV1/FVC"
levels(output$OUTCOME)[levels(output$OUTCOME)=="FEV1_FVC_pp_GLI"] <- "FEV1/FVC % pred"
levels(output$OUTCOME)[levels(output$OUTCOME)=="FEV1_FVC_Zscore_GLI"] <- "FEV1/FVC Z-score"
levels(output$OUTCOME)[levels(output$OUTCOME)=="FEV1_pp_GLI"] <- "FEV1 % pred"
levels(output$OUTCOME)[levels(output$OUTCOME)=="FEV1_Zscore_GLI"] <- "FEV1 Z-score"
levels(output$OUTCOME)[levels(output$OUTCOME)=="FVC_pp_GLI"] <- "FVC % pred"
levels(output$OUTCOME)[levels(output$OUTCOME)=="FVC_Zscore_GLI"] <- "FVC Z-score"
levels(output$OUTCOME)[levels(output$OUTCOME)=="log_cbc_abs_neut"] <- "Absolute Neutrophils -log"
levels(output$OUTCOME)[levels(output$OUTCOME)=="log_cbc_percent_neut"] <- "% Neutrophils -log"
levels(output$OUTCOME)[levels(output$OUTCOME)=="log_cbc_wbc"] <- "White blood cell count - log"
levels(output$OUTCOME)[levels(output$OUTCOME)=="log_FeNO_avg"] <- "Avg. FeNO - log"
outcomes <- unique(as.character(output$Outcome))
exposures <- unique(output$Exposure)
for (i in 1:29) {
outcomedat <- subset(output, Outcome == outcomes[i])
outcomedat$color[outcomedat$Exposure == "endo_m3"] <-"red"
outcomedat$color[outcomedat$Exposure == "gluc_m3"] <-"orangered2"
outcomedat$color[outcomedat$Exposure == "vest_O3"] <-"gold4"
outcomedat$color[outcomedat$Exposure == "CDPHE_O3_mean"] <-"chartreuse3"
outcomedat$color[outcomedat$Exposure == "log_vest_pm10"] <-"forestgreen"
outcomedat$color[outcomedat$Exposure == "log_msp_pm10"] <-"turquoise4"
outcomedat$color[outcomedat$Exposure == "CDPHE_PM10_mean"] <-"blue3"
outcomedat$color[outcomedat$Exposure == "log_vest_NO2"] <-"darkorchid3"
outcomedat$color[outcomedat$Exposure == "log_stat_NO2"] <-"maroon"
outcomedat$color[outcomedat$Exposure == "log_CDPHE_NO2_mean"] <-"deeppink2"
outcomedat$color[outcomedat$Exposure == "nicalert"] <-"mediumvioletred"
dotchart(outcomedat$Coef_IQR,labels=outcomedat$Exposure,cex=.7,
main=paste0("Relative Exposure Influence - ",outcomes[i]),
xlab="Coefficient/IQR", gcolor="blue", color=outcomedat$color)
}
output <- read.csv("~/Desktop/ReproducibleItemsforDAPS/DAPS_OUTPUT2.csv", header=TRUE)
levels(output$Outcome)
levels(output$Outcome)
# Rename by name: change "beta" to "two"
levels(output$Outcome)[levels(output$Outcome)=="CACT_ACT_cont"] <- "CACT-ACT"
levels(output$Outcome)[levels(output$Outcome)=="CASI_Total_wFxn"] <- "CASI Score"
levels(output$Outcome)[levels(output$Outcome)=="cbc_abs_eos"] <- "Absolute Eosinophils"
levels(output$Outcome)[levels(output$Outcome)=="cbc_abs_neut"] <- "Absolute Neutrophils"
levels(output$Outcome)[levels(output$Outcome)=="cbc_percent_eos"] <- "% Eosinophils"
levels(output$Outcome)[levels(output$Outcome)=="cbc_percent_neut"] <- "% Neutrophils"
levels(output$Outcome)[levels(output$Outcome)=="FEF2575_pp_GLI"] <- "FEF-2575 % pred"
levels(output$Outcome)[levels(output$Outcome)=="FEF2575_Zscore_GLI"] <- "FEF-2575 Z-score"
levels(output$Outcome)[levels(output$Outcome)=="FeNO_avg"] <- "Avg. FeNO"
levels(output$Outcome)[levels(output$Outcome)=="FEV1_FVC"] <- "FEV1/FVC"
levels(output$Outcome)[levels(output$Outcome)=="FEV1_FVC_pp_GLI"] <- "FEV1/FVC % pred"
levels(output$Outcome)[levels(output$Outcome)=="FEV1_FVC_Zscore_GLI"] <- "FEV1/FVC Z-score"
levels(output$Outcome)[levels(output$Outcome)=="FEV1_pp_GLI"] <- "FEV1 % pred"
levels(output$Outcome)[levels(output$Outcome)=="FEV1_Zscore_GLI"] <- "FEV1 Z-score"
levels(output$Outcome)[levels(output$Outcome)=="FVC_pp_GLI"] <- "FVC % pred"
levels(output$Outcome)[levels(output$Outcome)=="FVC_Zscore_GLI"] <- "FVC Z-score"
levels(output$Outcome)[levels(output$Outcome)=="log_cbc_abs_neut"] <- "Absolute Neutrophils -log"
levels(output$Outcome)[levels(output$Outcome)=="log_cbc_percent_neut"] <- "% Neutrophils -log"
levels(output$Outcome)[levels(output$Outcome)=="log_cbc_wbc"] <- "White blood cell count - log"
levels(output$Outcome)[levels(output$Outcome)=="log_FeNO_avg"] <- "Avg. FeNO - log"
outcomes <- unique(as.character(output$Outcome))
exposures <- unique(output$Exposure)
for (i in 1:29) {
outcomedat <- subset(output, Outcome == outcomes[i])
outcomedat$color[outcomedat$Exposure == "endo_m3"] <-"red"
outcomedat$color[outcomedat$Exposure == "gluc_m3"] <-"orangered2"
outcomedat$color[outcomedat$Exposure == "vest_O3"] <-"gold4"
outcomedat$color[outcomedat$Exposure == "CDPHE_O3_mean"] <-"chartreuse3"
outcomedat$color[outcomedat$Exposure == "log_vest_pm10"] <-"forestgreen"
outcomedat$color[outcomedat$Exposure == "log_msp_pm10"] <-"turquoise4"
outcomedat$color[outcomedat$Exposure == "CDPHE_PM10_mean"] <-"blue3"
outcomedat$color[outcomedat$Exposure == "log_vest_NO2"] <-"darkorchid3"
outcomedat$color[outcomedat$Exposure == "log_stat_NO2"] <-"maroon"
outcomedat$color[outcomedat$Exposure == "log_CDPHE_NO2_mean"] <-"deeppink2"
outcomedat$color[outcomedat$Exposure == "nicalert"] <-"mediumvioletred"
dotchart(outcomedat$Coef_IQR,labels=outcomedat$Exposure,cex=.7,
main=paste0("Relative Exposure Influence - ",outcomes[i]),
xlab="Coefficient/IQR", gcolor="blue", color=outcomedat$color)
}
levels(output$Outcome)[levels(output$Outcome)=="cbc_wbc"] <- "White blood cell count"
levels(output$Outcome)
# Rename by name: change "beta" to "two"
levels(output$Outcome)[levels(output$Outcome)=="CACT_ACT_cont"] <- "CACT-ACT"
levels(output$Outcome)[levels(output$Outcome)=="CASI_Total_wFxn"] <- "CASI Score"
levels(output$Outcome)[levels(output$Outcome)=="cbc_abs_eos"] <- "Absolute Eosinophils"
levels(output$Outcome)[levels(output$Outcome)=="cbc_abs_neut"] <- "Absolute Neutrophils"
levels(output$Outcome)[levels(output$Outcome)=="cbc_percent_eos"] <- "% Eosinophils"
levels(output$Outcome)[levels(output$Outcome)=="cbc_percent_neut"] <- "% Neutrophils"
levels(output$Outcome)[levels(output$Outcome)=="FEF2575_pp_GLI"] <- "FEF-2575 % pred"
levels(output$Outcome)[levels(output$Outcome)=="FEF2575_Zscore_GLI"] <- "FEF-2575 Z-score"
levels(output$Outcome)[levels(output$Outcome)=="FeNO_avg"] <- "Avg. FeNO"
levels(output$Outcome)[levels(output$Outcome)=="FEV1_FVC"] <- "FEV1/FVC"
levels(output$Outcome)[levels(output$Outcome)=="FEV1_FVC_pp_GLI"] <- "FEV1/FVC % pred"
levels(output$Outcome)[levels(output$Outcome)=="FEV1_FVC_Zscore_GLI"] <- "FEV1/FVC Z-score"
levels(output$Outcome)[levels(output$Outcome)=="FEV1_pp_GLI"] <- "FEV1 % pred"
levels(output$Outcome)[levels(output$Outcome)=="FEV1_Zscore_GLI"] <- "FEV1 Z-score"
levels(output$Outcome)[levels(output$Outcome)=="FVC_pp_GLI"] <- "FVC % pred"
levels(output$Outcome)[levels(output$Outcome)=="FVC_Zscore_GLI"] <- "FVC Z-score"
levels(output$Outcome)[levels(output$Outcome)=="log_cbc_abs_neut"] <- "Absolute Neutrophils -log"
levels(output$Outcome)[levels(output$Outcome)=="log_cbc_percent_neut"] <- "% Neutrophils -log"
levels(output$Outcome)[levels(output$Outcome)=="log_cbc_wbc"] <- "White blood cell count - log"
levels(output$Outcome)[levels(output$Outcome)=="log_FeNO_avg"] <- "Avg. FeNO - log"
levels(output$Outcome)[levels(output$Outcome)=="cbc_wbc"] <- "White blood cell count"
outcomes <- unique(as.character(output$Outcome))
exposures <- unique(output$Exposure)
for (i in 1:21) {
outcomedat <- subset(output, Outcome == outcomes[i])
outcomedat$color[outcomedat$Exposure == "endo_m3"] <-"red"
outcomedat$color[outcomedat$Exposure == "gluc_m3"] <-"orangered2"
outcomedat$color[outcomedat$Exposure == "vest_O3"] <-"gold4"
outcomedat$color[outcomedat$Exposure == "CDPHE_O3_mean"] <-"chartreuse3"
outcomedat$color[outcomedat$Exposure == "log_vest_pm10"] <-"forestgreen"
outcomedat$color[outcomedat$Exposure == "log_msp_pm10"] <-"turquoise4"
outcomedat$color[outcomedat$Exposure == "CDPHE_PM10_mean"] <-"blue3"
outcomedat$color[outcomedat$Exposure == "log_vest_NO2"] <-"darkorchid3"
outcomedat$color[outcomedat$Exposure == "log_stat_NO2"] <-"maroon"
outcomedat$color[outcomedat$Exposure == "log_CDPHE_NO2_mean"] <-"deeppink2"
outcomedat$color[outcomedat$Exposure == "nicalert"] <-"mediumvioletred"
dotchart(outcomedat$Coef_IQR,labels=outcomedat$Exposure,cex=.7,
main=paste0("Relative Exposure Influence - ",outcomes[i]),
xlab="Coefficient/IQR", gcolor="blue", color=outcomedat$color)
}
